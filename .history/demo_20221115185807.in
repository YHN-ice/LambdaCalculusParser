Y = ($y.($x.y(x x))($x.y(x x)))
R = ($r.$m.((Z m) O)((m S) (r (P m))))

T = ($x.$y.x)
F = ($x.$y.y)
N = $x.(x F)T
Z = $x.((x F)N)F

S = $w.$n.$m.n((w n)m)
O = $s.$z.z
I = S O
L = ($c.(c O)O)
K = $p.$i.(i(S(p T)))(p T)
P = $n.((n K)($z.(z O)O))F

func(head:z,
            body:apply(
                       apply(name:z<-I)
                       <-apply(func(head:z,body:apply(apply(name:z<-O)<-O))<-T)))applying to...

func(head:z,body:apply(apply(name:z<-I)<-apply(func(head:z,body:apply(apply(name:z<-O)<-O))<-T)))
apply(apply(name:z<-I)<-apply(func(head:z,body:apply(apply(name:z<-O)<-O))<-T))applying to...

apply(func(head:f,body:apply(apply(apply(name:f<-func(head:c,body:func(head:d,body:name:d)))<-func(head:n,body:apply(apply(name:n<-func(head:c,body:func(head:d,body:name:d)))<-func(head:a,body:func(head:b,body:name:a)))))<-func(head:c,body:func(head:d,body:name:d))))<-apply(name:<-func(head:s,body:func(head:k,body:name:k))))parsed initial...

apply( apply(apply(apply(name:<-F)<-F)<-func(head:n,body:apply(apply(name:n<-F)<-T))) <-F)